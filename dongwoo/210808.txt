2021/08/08 (sun)
1. Operating System (OS) 란?
컴퓨터의 시스템자원(하드웨어)들을 효율적으로 관리하여 사용자와 응용프로그램에 서비스를 제공하는 역할을 하는 것.
프로세서에게 처리할 작업 할당/관리 및 프로그램의 프로세서 사용시간 조율 및 제어를 실시 함.


2. 하드웨어란?
a. Processor (프로세서)
컴퓨터의 두뇌(중앙처리장치)이며, 연산에 사용되어진다. 또한, 컴퓨터의 모든 장치의 동작을 제어한다.

CPU의 구조를 예를들어 설명하겠다. 
1개의 CPU는 2파트(제어/데이터)로 나뉘어지고, 
각 파트는 제어장치와 연산장치/레지스터가 있다.

레지스터는 프로세서 내부에있는 메모리이다. 
프로세서가 사용할 데이터를 저장하는, 컴퓨터에서 가장 빠른 메모리 장치이다. 

레지스터는 3가지로 분류할 수 있다.
- 용도에 따른 분류: 전용/범용 레지스터
- 사용자가 정보 변경 가능 여부에 따른 분류: 가시/불가시 레지스터
- 저장하는 정보의 종류에 따른 분류: 데이터/주소/상태 레지스터

프로세서의 예시) CPU, GPU, 응용 전용 처리장치 등


b. 메모리 (Memory)
저장하는 역할. 프로그램 (OS, 사용자SW 등)을 저장하는 기억장치이다.
예) 주기억장치, 보조기억장치, 레지스터

메모리에는 총 4가지가 있으며 각각 용량과 속도/가격의 순위로 나뉘어 설명할 수 있다.
용량과 속도/가격은 반비례하며, 용량이 많을수록 속도/가격 또한 느려지고 저렴해진다.
용량이 높은 순서(계층)로는, 보조기억장치(HDD) > 주기억장치(메인 메모리/DRAM) > 캐시 (CPU) > 레지스터 (CPU) 이다.
즉, 반비례한다는 것을 참고해보면, 위 순서(계층)는 속도/가격이 느리고 저렴한 순위가 될 수도 있을 것이다.

보조기억장치는, 프로그램과 데이터를 메인 메모리에 옮겨야 실행할 수 있다.
나머지 3가지 메모리는 프로세서가 프로그램과 데이터에 직접 접근할 수 있다.

비싸긴해도 속도가 제일 빠른 레지스터로 모든 메모리를 사용하면 되지않을까?
아니다. 최소비용으로 최고의 성능을 얻는 것이 우리의 목표이다. 그렇기에 순서/계층, 그리고 각각의 장/단점이 존재하고 이것을 밸런스에 맞춰 잘 사용하는 것이 우리의 임무이다.


b-1. 메모리의 종류

- 주기억장치: 
프로세서가 수행할 프로그램과 데이터가 저장 되어진다.
프로세서가 프로그램과 데이터에 직접 접근할 수 있는 것들 중에서는 용량이 크고 가격이 저렴하다.
Disk의 속도와 CPU의 속도양극화가 심한데, 이렇게 되면 병목현상이 발생하게 된다. 이것을 해소해주는 중간재/보완재 역할이 Main Memory이다.

- Cache (캐시):
프로세서(CPU) 내부에 있는 메모리. 속도는 빠르지만 비싸다.
주기억장치의 입출력 병목현상을 해소하는 역할도 한다. 무슨말이냐? 
주기억장치가 CPU와 Disk의 속도양극화(Performace Gap)를 어느정도 줄였지만 턱없이 부족하다. 
Cache를 활용하여 Performance Gap을 조금 더 줄여주는 것.

일반적으로는 HW적으로 관리되어진다.
프로세서가 일하다가 어떤 정보가 필요해서 캐시내부에 물어보고 없다면, 캐시는 주기억장치에 직접 가서 프로세서가 찾는 정보를 찾아 돌아와서 다시 전해준다.
아래 개념은 이것을 설명하는 단어이며, 알아두면 좋겠다.

* Cache hit: 프로세서가 필요한 데이터 블록이 캐시내부에 존재하는 경우.
* Cache miss: 프로세서가 필요한 데이터 블록이 캐시내부에 없는 경우.

- Cache의 Locality (지역성)
* Spatial Locality (공간적 지역성):
참조했던 주소와 그 주소와 인접한 주소를 참조하는 특성이 있으며, 한번 참조했던 장소를 다시한번 더 해당 주소를 참조할 가능성이 높다는 것을 의미한다.
* Temporal Locality (시간적 지역성):
한번 참조한 주소를 곧 다시 참조하는 특성이며, For문 등의 순환문으로 예를 들 수 있다.
-> 지역성은 위와 같은 이유로 캐시 적중률과 밀접하다. 이것은 알고리즘 성능 향상을 위한 중요한 요소이다.

- 보조기억장치
프로그램과 데이터를 저장. 프로세서가 직접 접근 불가능하고 주기억장치(Main Memory/DRAM)을 거쳐서 접근한다.
용량이 크고 가격이 저렴함.

c. 주변장치
위 a, b에 속하지 않으며, 우리가 평상시에 자유롭게 사용하고있는 물건들.
에) 키보드/마우스, 모니터/프린터, 네트워크 모뎀(랜선)


3. 시스템 버스

- 버스?
프로세서가 처리한 데이터들은 모니터와 같은 인터페이스에 출력되거나 메모리에 저장되어진다.
이러한 행위가 이루어 지기 위해서는 위의 데이터들이 각 컴포넌트끼리 통신이 가능해야 한다.

이러한 통신을 가능하게 해주는 Subsystem이 존재하며, 이것을 Computer Bus라고 한다.
즉, 하드웨어들이 데이터 및 신호를 주고 받는 물리적인 통로이다.


- 시스템 버스가 전송할 수 있는 세가지 정보타입
* Address: 데이터 전송을 할 때, 데이터가 메모리의 어디에 있는지 나타내는 위치.
* Data: 연산된 결과와 같이 의미있는 값을 말한다.
* Control: 앞의 주소정보와 실제 데이터가 컴퓨터 시스템 안에서 어떻게 관리되고 어느 뱡향으로 전송되어야 하는지 데이터의 흐름을 관리한다.


- 컴포넌트 (Component)
소프트웨어 시스템에서 독립적인 업무 또는 독립적인 기능을 수행하는 모듈로서, 시스템 유지보수에 있어 교체가 가능한 부품이다.
우리가 컴퓨터를 조립한다고 가정해보자. 그럼 CPU, GPU와 같은 여러가지의 부품을 구입해서 조립 할 것이다.
이 부품들은 각자 각각의 맡은바 독자적인 임무를 수행한다. 그러다 고장이나면 해당 부분만을 뽑아내서 다시 교체할 수 있다.
소프트웨어 컴포넌트는 하드웨어의 그래픽카드와 같은 개념으로 독립적인 기능을 수행하는 소프트웨어의 모듈이다.

출처 : [http://halfork.tistory.com/entry/Component-%EB%9E%80]
출처: https://richong.tistory.com/60 [study]



